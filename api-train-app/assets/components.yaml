components:
  schemas:
    AssetId:
      type: string
    WagonId:
      type: string
    LocomotiveId:
      type: string
    AssetType:
      type: string
      enum: [LOCOMOTIVE, WAGON]
    LocomotivePowerType:
      type: string
      enum: [ELECTRIC, DIESEL]
    WagonTypeEnum:
      type: string
      enum: [COACH, GONDOLA, BOX, PLATFORM, TANK, HOPPER, BUNKER, REFRIGERATED]
    AssetSubType:
      type: string
    SerialNumber:
      type: string
    LocomotiveModelTypeId:
      type: string
    WagonModelTypeId:
      type: string
    LocomotiveModelResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/LocomotiveModelTypeId"
        name:
          type: string
        powerType:
          $ref: '#/components/schemas/LocomotivePowerType'
        gauge:
          type: string
      required: [id, name, powerType, gauge]
    WagonModelResponse:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/WagonModelTypeId"
        name:
          type: string
        gauge:
          type: string
        type:
          $ref: "#/components/schemas/WagonTypeEnum"
      required: [ id, name, gauge, type ]
    TranslatableMessageParamResponse:
      type: object
      properties:
        key:
          type: string
        type:
          type: string
          enum: [STRING, NUMBER, LOCAL_DATE, TIME, LOCAL_DATE_TIME, ZONED_DATE_TIME, KEY]
        value:
          type: string
      required: [key, typeEnum, value]
    TranslatableMessageResponse:
      type: object
      properties:
        message:
          type: string
        key:
          type: string
        severity:
          type: string
          enum: [ERROR, WARN, INFO]
        params:
          type: array
          items:
            $ref: '#/components/schemas/TranslatableMessageParamResponse'
        subMessages:
          type: array
          items:
            $ref: '#/components/schemas/TranslatableMessageResponse'
      required: [message, key, params, subMessages]

